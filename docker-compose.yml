#version: '3.8'

services:
  db:
    image: mysql:8.4.2
    container_name: mysql_db
    command: mysqld --mysql-native-password=ON
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-rootpassword}
      MYSQL_DATABASE: ${MYSQL_DATABASE:-django_db}
      MYSQL_USER: ${MYSQL_USER:-django_user}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-django_password}
    volumes:
      - mysql_data:/var/lib/mysql
    ports:
      - "3306:3306"
    healthcheck:
      test: [ "CMD-SHELL", "mysqladmin ping -h 127.0.0.1 -u${MYSQL_USER} -p${MYSQL_PASSWORD}" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - django_network


  # Общие настройки для web и test
  app_base: &app_base
    build: b2brocker/.
    volumes:
      - ./b2brocker/.:/app
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
    environment:
      MYSQL_HOST: ${MYSQL_HOST:-db}
      MYSQL_DATABASE: ${MYSQL_DATABASE:-django_db}
      MYSQL_USER: ${MYSQL_USER:-root}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-rootpassword}
    networks:
      - django_network

  web:
    <<: *app_base
    container_name: django_app_web
    command: >
      sh -c "python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8000"

  test:
    <<: *app_base
    container_name: django_app_test
    command: >
      sh -c "coverage run --rcfile=.coveragerc manage.py test &&
            coverage report"

volumes:
  mysql_data:

networks:
  django_network:
    driver: bridge
